"use client"

import { useState } from "react"
import Link from "next/link"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Badge } from "@/components/ui/badge"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { ArrowLeft, Play, Headphones, PenTool, Star, BookOpen, Clock, Target } from "lucide-react"

export default function ListeningPage() {
    const [selectedTab, setSelectedTab] = useState("dictation")

    const dictationExercises = [
        {
            id: "daily-conversation",
            title: "Daily Conversation",
            level: "Beginner",
            duration: "15 ph√∫t",
            sentences: 5,
            difficulty: "D·ªÖ",
            description: "C√°c cu·ªôc h·ªôi tho·∫°i h√†ng ng√†y c∆° b·∫£n",
            completed: true,
            score: 85,
        },
        {
            id: "business-english",
            title: "Business English",
            level: "Intermediate",
            duration: "20 ph√∫t",
            sentences: 8,
            difficulty: "Trung b√¨nh",
            description: "Ti·∫øng Anh trong m√¥i tr∆∞·ªùng c√¥ng s·ªü",
            completed: true,
            score: 92,
        },
        {
            id: "academic-listening",
            title: "Academic Listening",
            level: "Advanced",
            duration: "25 ph√∫t",
            sentences: 10,
            difficulty: "Kh√≥",
            description: "Nghe hi·ªÉu n·ªôi dung h·ªçc thu·∫≠t",
            completed: false,
            score: null,
        },
        {
            id: "travel-conversations",
            title: "Travel Conversations",
            level: "Beginner",
            duration: "18 ph√∫t",
            sentences: 6,
            difficulty: "D·ªÖ",
            description: "H·ªôi tho·∫°i khi ƒëi du l·ªãch",
            completed: false,
            score: null,
        },
        {
            id: "news-listening",
            title: "News Listening",
            level: "Advanced",
            duration: "30 ph√∫t",
            sentences: 12,
            difficulty: "Kh√≥",
            description: "Nghe tin t·ª©c v√† b√°o ch√≠",
            completed: false,
            score: null,
        },
        {
            id: "interview-skills",
            title: "Interview Skills",
            level: "Intermediate",
            duration: "22 ph√∫t",
            sentences: 9,
            difficulty: "Trung b√¨nh",
            description: "K·ªπ nƒÉng ph·ªèng v·∫•n xin vi·ªác",
            completed: false,
            score: null,
        },
    ]

    const fillInExercises = [
        {
            id: "travel-planning",
            title: "Travel Planning",
            level: "Beginner",
            duration: "12 ph√∫t",
            blanks: 8,
            difficulty: "D·ªÖ",
            description: "L√™n k·∫ø ho·∫°ch du l·ªãch",
            completed: true,
            score: 75,
        },
        {
            id: "shopping-mall",
            title: "Shopping Mall",
            level: "Beginner",
            duration: "15 ph√∫t",
            blanks: 10,
            difficulty: "D·ªÖ",
            description: "Mua s·∫Øm t·∫°i trung t√¢m th∆∞∆°ng m·∫°i",
            completed: false,
            score: null,
        },
        {
            id: "university-lecture",
            title: "University Lecture",
            level: "Intermediate",
            duration: "20 ph√∫t",
            blanks: 15,
            difficulty: "Trung b√¨nh",
            description: "B√†i gi·∫£ng t·∫°i ƒë·∫°i h·ªçc",
            completed: false,
            score: null,
        },
        {
            id: "business-meeting",
            title: "Business Meeting",
            level: "Advanced",
            duration: "25 ph√∫t",
            blanks: 20,
            difficulty: "Kh√≥",
            description: "Cu·ªôc h·ªçp kinh doanh",
            completed: false,
            score: null,
        },
        {
            id: "restaurant-order",
            title: "Restaurant Order",
            level: "Beginner",
            duration: "10 ph√∫t",
            blanks: 6,
            difficulty: "D·ªÖ",
            description: "ƒê·∫∑t m√≥n t·∫°i nh√† h√†ng",
            completed: false,
            score: null,
        },
        {
            id: "job-interview",
            title: "Job Interview",
            level: "Intermediate",
            duration: "18 ph√∫t",
            blanks: 12,
            difficulty: "Trung b√¨nh",
            description: "Ph·ªèng v·∫•n xin vi·ªác",
            completed: false,
            score: null,
        },
    ]

    const getLevelColor = (level: string) => {
        switch (level) {
            case "Beginner":
            case "D·ªÖ":
                return "text-white"
            case "Intermediate":
            case "Trung b√¨nh":
                return "text-white"
            case "Advanced":
            case "Kh√≥":
                return "text-white"
            default:
                return "text-white"
        }
    }

    const getLevelBgColor = (level: string) => {
        switch (level) {
            case "Beginner":
            case "D·ªÖ":
                return "#93D333"
            case "Intermediate":
            case "Trung b√¨nh":
                return "#93D333"
            case "Advanced":
            case "Kh√≥":
                return "#93D333"
            default:
                return "#93D333"
        }
    }

    const renderExerciseCard = (exercise: any, type: string) => (
        <Card key={exercise.id} className="hover:shadow-lg transition-all duration-300 border-0" style={{ backgroundColor: '#1a2a2f' }}>
            <CardContent className="p-6">
                <div className="flex items-start justify-between mb-4">
                    <div className="flex-1">
                        <div className="flex items-center space-x-3 mb-2">
                            <h3 className="text-lg font-semibold text-white">{exercise.title}</h3>
                            <Badge className={getLevelColor(exercise.difficulty)} style={{ backgroundColor: getLevelBgColor(exercise.difficulty) }}>
                                {exercise.difficulty}
                            </Badge>
                            {exercise.completed && (
                                <Badge variant="outline" className="text-green-400 border-green-400">
                                    Ho√†n th√†nh
                                </Badge>
                            )}
                        </div>
                        <p className="text-gray-300 mb-3">{exercise.description}</p>
                        <div className="flex items-center space-x-4 text-sm text-gray-400">
                            <span>‚è±Ô∏è {exercise.duration}</span>
                            {type === "fill-in" && <span>üìù {exercise.blanks} ch·ªó tr·ªëng</span>}
                            {type === "dictation" && <span>üìÑ {exercise.sentences} c√¢u</span>}
                            {exercise.score && (
                                <span className="text-white font-medium">
                                    <Star className="h-4 w-4 inline mr-1" style={{ color: '#93D333' }} />
                                    {exercise.score}%
                                </span>
                            )}
                        </div>
                    </div>
                </div>
                <Link href={`/learning/listening/${type === "fill-in" ? "fill-in/" : ""}${exercise.id}`}>
                    <Button className="w-full text-white border-0 hover:opacity-90" style={{ backgroundColor: '#93D333' }}>
                        <Play className="h-4 w-4 mr-2" />
                        {exercise.completed ? "L√†m l·∫°i" : "B·∫Øt ƒë·∫ßu"}
                    </Button>
                </Link>
            </CardContent>
        </Card>
    )

    return (
        <div className="min-h-screen" style={{ backgroundColor: '#141F23' }}>
            <div className="px-6 py-8" style={{ backgroundColor: '#141F23' }}>
                <div className="container mx-auto">
                    <div className="flex items-center space-x-4 mb-6">
                        <div className="w-12 h-12 rounded-lg flex items-center justify-center" style={{ backgroundColor: '#93D333' }}>
                            <BookOpen className="h-6 w-6 text-white" />
                        </div>
                        <div>
                            <h1 className="text-3xl font-bold text-white">Listening Practice</h1>
                            <p className="text-gray-300">Luy·ªán nghe v√† ch√©p ch√≠nh t·∫£ ti·∫øng Anh</p>
                        </div>
                    </div>

                    <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
                        <div className="flex items-center space-x-3 p-4 rounded-lg border" style={{ backgroundColor: '#1a2a2f', borderColor: '#93D333' }}>
                            <div className="w-10 h-10 rounded-lg flex items-center justify-center" style={{ backgroundColor: '#93D333' }}>
                                <Target className="h-5 w-5 text-white" />
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-white">12 b√†i t·∫≠p</div>
                                <div className="text-sm text-gray-300">T·ªïng s·ªë b√†i luy·ªán t·∫≠p</div>
                            </div>
                        </div>

                        <div className="flex items-center space-x-3 p-4 rounded-lg border" style={{ backgroundColor: '#1a2a2f', borderColor: '#93D333' }}>
                            <div className="w-10 h-10 rounded-lg flex items-center justify-center" style={{ backgroundColor: '#93D333' }}>
                                <Clock className="h-5 w-5 text-white" />
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-white">T·ª´ 10-30 ph√∫t</div>
                                <div className="text-sm text-gray-300">Th·ªùi gian m·ªói b√†i</div>
                            </div>
                        </div>

                        <div className="flex items-center space-x-3 p-4 rounded-lg border" style={{ backgroundColor: '#1a2a2f', borderColor: '#93D333' }}>
                            <div className="w-10 h-10 rounded-lg flex items-center justify-center" style={{ backgroundColor: '#93D333' }}>
                                <Play className="h-5 w-5 text-white" />
                            </div>
                            <div>
                                <div className="text-2xl font-bold text-white">Audio + Text</div>
                                <div className="text-sm text-gray-300">H√¨nh th·ª©c luy·ªán t·∫≠p</div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div className="container mx-auto px-6 py-8">
                <Tabs value={selectedTab} onValueChange={setSelectedTab}>
                    <TabsList className="grid w-full grid-cols-2 border-0" style={{ backgroundColor: '#1a2a2f' }}>
                        <TabsTrigger
                            value="dictation"
                            className="data-[state=active]:bg-[#93D333] data-[state=active]:text-white text-gray-300"
                        >
                            Ch√©p ch√≠nh t·∫£
                        </TabsTrigger>
                        <TabsTrigger
                            value="fill-in"
                            className="data-[state=active]:bg-[#93D333] data-[state=active]:text-white text-gray-300"
                        >
                            ƒêi·ªÅn t·ª´
                        </TabsTrigger>
                    </TabsList>

                    <TabsContent value="dictation" className="mt-6">
                        <div className="mb-6">
                            <h2 className="text-xl font-semibold mb-2 text-white">B√†i t·∫≠p ch√©p ch√≠nh t·∫£</h2>
                            <p className="text-gray-300">Nghe v√† g√µ l·∫°i to√†n b·ªô n·ªôi dung b·∫°n nghe ƒë∆∞·ª£c</p>
                        </div>
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {dictationExercises.map((exercise) => renderExerciseCard(exercise, "dictation"))}
                        </div>
                    </TabsContent>

                    <TabsContent value="fill-in" className="mt-6">
                        <div className="mb-6">
                            <h2 className="text-xl font-semibold mb-2 text-white">B√†i t·∫≠p ƒëi·ªÅn t·ª´</h2>
                            <p className="text-gray-300">Nghe v√† ƒëi·ªÅn t·ª´ c√≤n thi·∫øu v√†o ch·ªó tr·ªëng</p>
                        </div>
                        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                            {fillInExercises.map((exercise) => renderExerciseCard(exercise, "fill-in"))}
                        </div>
                    </TabsContent>
                </Tabs>

                <Card className="mt-8 border-0" style={{ backgroundColor: '#1a2a2f' }}>
                    <CardHeader>
                        <CardTitle className="flex items-center text-white">
                            <Target className="h-5 w-5 mr-2" style={{ color: '#93D333' }} />
                            M·∫πo luy·ªán nghe hi·ªáu qu·∫£
                        </CardTitle>
                    </CardHeader>
                    <CardContent>
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div className="space-y-3">
                                <h4 className="font-semibold text-white">üéß Ch√©p ch√≠nh t·∫£:</h4>
                                <ul className="space-y-2 text-sm text-gray-300">
                                    <li>‚Ä¢ Nghe k·ªπ t·ª´ng t·ª´, kh√¥ng v·ªôi v√†ng</li>
                                    <li>‚Ä¢ C√≥ th·ªÉ nghe l·∫°i nhi·ªÅu l·∫ßn</li>
                                    <li>‚Ä¢ Ch√∫ √Ω d·∫•u c√¢u v√† vi·∫øt hoa</li>
                                    <li>‚Ä¢ T·∫≠p trung v√†o t·ª´ kh√≥a ch√≠nh</li>
                                </ul>
                            </div>
                            <div className="space-y-3">
                                <h4 className="font-semibold text-white">üìù ƒêi·ªÅn t·ª´:</h4>
                                <ul className="space-y-2 text-sm text-gray-300">
                                    <li>‚Ä¢ ƒê·ªçc tr∆∞·ªõc to√†n b·ªô ƒëo·∫°n vƒÉn</li>
                                    <li>‚Ä¢ D·ª± ƒëo√°n t·ª´ lo·∫°i c·∫ßn ƒëi·ªÅn</li>
                                    <li>‚Ä¢ S·ª≠ d·ª•ng g·ª£i √Ω khi c·∫ßn thi·∫øt</li>
                                    <li>‚Ä¢ Nghe k·ªπ ng·ªØ c·∫£nh xung quanh</li>
                                </ul>
                            </div>
                        </div>
                    </CardContent>
                </Card>
            </div>
        </div>
    )
}