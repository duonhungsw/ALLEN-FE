name: CI/CD Vercel

on:
  pull_request:
    branches:
      - develop
      - main
  push:
    branches:
      - main

jobs:
  preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Next.js build
        run: npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Create GitHub Deployment
        id: deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ github.token }}
          environment: preview
          ref: ${{ github.head_ref }}

      - name: Deploy to Vercel (Preview)
        id: vercel
        run: |
          url=$(vercel --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID --confirm)
          echo "preview_url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Deployment Status
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.vercel.outputs.preview_url }}

  production:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run Next.js build
        run: npm run build

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Create GitHub Deployment
        id: deployment
        uses: chrnorm/deployment-action@v2
        with:
          token: ${{ github.token }}
          environment: production
          ref: ${{ github.sha }}

      - name: Deploy to Vercel (Production)
        id: vercel
        run: |
          url=$(vercel --prod --token $VERCEL_TOKEN --scope $VERCEL_ORG_ID --confirm)
          echo "prod_url=$url" >> $GITHUB_OUTPUT
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

      - name: Set Deployment Status
        uses: chrnorm/deployment-status@v2
        with:
          token: ${{ github.token }}
          state: success
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          environment_url: ${{ steps.vercel.outputs.prod_url }}
